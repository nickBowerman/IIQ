#
# (c) Copyright 2011 SailPoint Technologies, Inc., All Rights Reserved.
#
### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.DailyRollingFileAppender
log4j.appender.stdout.Append=true
log4j.appender.stdout.File=C:/Sailpoint/logs/Stdout.log
log4j.appender.stdout.DatePattern='.'yyyy-MM-dd
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} %5p %t %c{4}:%L - %m%n

# this one is better for concurrency tests
#log4j.appender.stdout.layout.ConversionPattern=%t %5p %c{4}:%L - %m%n

### direct log messages to the db
log4j.appender.syslog=sailpoint.api.logging.SyslogAppender

# Below is an example of how to create a logger that writes to a file
# uncomment the following four lines, then add  the value "file" to 
# the log4j.rootLogger list
# 
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.Append=true
log4j.appender.file.File=C:/Sailpoint/logs/sailpoint.log
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p %t %c{4}:%L - %m%n

# Below is an example of how to create a csv of metered data.
# uncomment the following 6 lines, as well as the logger.sailpoint.api.Meter line
# near the end of this file
#log4j.appender.meter=org.apache.log4j.RollingFileAppender
#log4j.appender.meter.File=/Library/Tomcat/logs/meter.log
#log4j.appender.meter.layout=org.apache.log4j.PatternLayout
#log4j.appender.meter.layout.ConversionPattern=%m%n
#log4j.appender.meter.MaxFileSize=1MB
#log4j.appender.meter.MaxBackupIndex=1 

### set default log levels and appender
### valid log levels in increasing order of severity are: 
###     trace, debug, info, warn, error, fatal, off
### trace is required to get method entry and exit logging
log4j.rootLogger=info,file,stdout
#log4j.rootLogger=warn,file

# Suppress a warning about using a default configuration
log4j.logger.net.sf.ehcache=error

# Suppress "narrowing proxy" hibernate warning.
log4j.logger.org.hibernate.engine.StatefulPersistenceContext=error

# Suppress warnings about deprecated gadgets during import
log4j.logger.net.sf.jasperreports.engine.xml=error

# Note:  The following logging properties turn off warnings that result from our
#        combination of technologies (Tomahawk/Faceletes/A4J, etc.).  
#        Commenting them out will result in a slew of parser warnings.
#        If you don't want to clutter your logs with a bunch of useless warning
#        messages please leave these as they are.  
# Suppress warning message about Unparsable lastModified
log4j.logger.org.apache.myfaces.renderkit.html.util.MyFacesResourceLoader=error
# Suppress warning message about response not having <head> or <body> tags
log4j.logger.org.apache.myfaces.renderkit.html.util.DefaultAddResource=error
# Suppress warning message about invalid HTML inside javascript
#   See http://www.mail-archive.com/users@myfaces.apache.org/msg50391.html
log4j.logger.org.apache.myfaces.renderkit.html.util.ReducedHTMLParser=error

log4j.logger.sailpoint=warn, syslog

# make sure the syslog code doesn't try to call itself if there's a problem.
# NOTE: The additivity flag is critical here!
log4j.logger.sailpoint.api.logging.SyslogAppender=error, stdout
log4j.additivity.sailpoint.api.logging.SyslogAppender=false

log4j.logger.sailpoint.object.SyslogEvent=error, stdout
log4j.additivity.sailpoint.object.SyslogEvent=false

#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug
#log4j.logger.org.hibernate=trace

#log4j.logger.org.hibernate.cache=trace
#log4j.logger.org.springframework=info
#log4j.logger.org.quartz=info

# Uncomment to log all SQL and prepared statement parameter values.
#log4j.logger.org.hibernate.SQL=debug
#log4j.logger.org.hibernate.type=trace

# Uncomment this to log all SailPoint generated HQL queries and
# query parameters. 
#log4j.logger.sailpoint.persistence.hql=trace

# Uncomment to view JSF logging
#log4j.logger.sailpoint.web.util.PhaseTracker=trace
#log4j.logger.com.sun.faces=trace
#log4j.logger.javax.faces=trace

# Uncomment to enable meter logging
#log4j.logger.sailpoint.api.Meter=info,meter

#log4j.logger.sailpoint.api.Aggregator=trace
#log4j.logger.sailpoint.api.CacheTracker=trace
#log4j.logger.sailpoint.api.Certificationer=info
#log4j.logger.sailpoint.api.certification.RemediationManager=info
#log4j.logger.sailpoint.api.CertificationPhaser=info
#log4j.logger.sailpoint.api.CorrelationModel=info
#log4j.logger.sailpoint.api.LockTracker=trace
#log4j.logger.sailpoint.api.ManagedAttributer=info
#log4j.logger.sailpoint.api.Provisioner=info
#log4j.logger.sailpoint.connector.SunIDMConnector=trace
#log4j.logger.sailpoint.integration.oim.OIMClient=info
#log4j.logger.sailpoint.object.ObjectConfig=info
#log4j.logger.sailpoint.persistence.DateType=info
#log4j.logger.sailpoint.persistence.DebugInterceptor=debug
#log4j.logger.sailpoint.persistence.HibernatePersistenceManager=info
#log4j.logger.sailpoint.persistence.HibernatePersistenceManager=trace
#log4j.logger.sailpoint.persistence.NewXmlType=info
#log4j.logger.sailpoint.persistence.PasswordType=info
#log4j.logger.sailpoint.persistence.SailPointInterceptor=info
#log4j.logger.sailpoint.persistence.XmlType=info
#log4j.logger.sailpoint.reporting=trace
#log4j.logger.sailpoint.server.BSFRuleRunner=trace
#log4j.logger.sailpoint.server.CacheService=info
#log4j.logger.sailpoint.server.Environment=trace
#log4j.logger.sailpoint.service.IIQRestService=info
#log4j.logger.sailpoint.task.IdentityRefreshExecutor=trace
#log4j.logger.sailpoint.task.RoleSynchronizer=info
#log4j.logger.sailpoint.web.util.TimingFilter=trace
#log4j.logger.sailpoint.server.HeartbeatService=trace
#log4j.logger.sailpoint.connector.sm=trace

### This section is for adding log4j logging statements for custom code/rules/classes/workflows, etc. ###
# com.sis.iiq.rule=trace
# com.sis.iiq.workflow=trace


### IIQ-Specific log4j classes ###
# These are referenced from David Durr (SP Employee)
# https://community.sailpoint.com/people/david.durr/blog/2016/10/23/log4j-support-guide

# Aggregation: (Including Delta)
#log4j.logger.sailpoint.api.Aggregator=all
#log4j.logger.sailpoint.api.Identitizer=all
#log4j.logger.sailpoint.api.provisioner=all
# This shows the provisioning plan
#log4j.logger.sailpoint.provisioning=all
#log4j.logger.sailpoint.api.Correlator=trace 
#log4j.logger.sailpoint.api.Aggregator$AccountGroupAggStatsHelper=ALL
 
# Authentication
#log4j.logger.sailpoint.server.Authenticator=trace
 
# Batch Requests:
#log4j.logger.sailpoint.object.BatchRequest=ALL
#log4j.logger.sailpoint.object.BatchRequestItem=ALL
#log4j.logger.sailpoint.workflow.BatchRequestLibrary=ALL
#log4j.logger.sailpoint.task.BatchRequestTaskExecutor=ALL
 
# Certification:
#log4j.logger.sailpoint.task.Housekeeper=trace 
#log4j.logger.sailpoint.api.Certificationer=trace
#log4j.logger.sailpoint.object.Certification=trace
#log4j.logger.sailpoint.object.CertificationEntity=trace
#log4j.logger.sailpoint.object.CertificationItem=trace

# Connector Gateway-based connectors
#log4j.logger.sailpoint.connector.sm.SMConnector=debug
#log4j.logger.sailpoint.connector.sm=trace

# Correlation
#log4j.logger.sailpoint.api.Correlator=trace

# Database Operations:
#WARNING: TRACE OUTPUT CAN BE LARGE IN SIZE
#log4j.logger.sailpoint.persistence.hql=debug 
#log4j.logger.sailpoint.persistence.XmlType=info

# Delete Object (class called whenever an object is deleted)
#log4j.logger.sailpoint.api.Terminator=ALL

# Email
#log4j.logger.sailpoint.request.EmailRequestExecutor=debug
#log4j.logger.sailpoint.api.EmailNotifier=debug
#log4j.logger.sailpoint.object.EmailTemplate=debug
#log4j.logger.sailpoint.api.EmailSuppressor=debug
#log4j.logger.sailpoint.api.Emailer=debug
#log4j.logger.sailpoint.api.SMTPEmailNotifier=debug
#log4j.logger.sailpoint.api.RedirectingEmailNotifer=debug 

# Entitlement Correlation: 
#log4j.logger.sailpoint.task.EntitlementCorrelationExecutor=trace
#log4j.logger.sailpoint.api.Identitizer=trace
 
# Hiberbate Logging Options 
#log4j.logger.org.hibernate=debug
#log4j.logger.org.hibernate.cache=debug
#log4j.logger.org.springframework=debug
#log4j.logger.sailpoint.persistence.hql=trace

# Identity Refresh task:
#log4j.logger.sailpoint.task.IdentityRefreshExecutor=trace 
#log4j.logger.sailpoint.api.Identitizer=trace

# IIQ Console 
#log4j.logger.sailpoint.server.SailPointConsole=all

# LCM requests:
#log4j.logger.sailpoint.web.lcm.AccessRequestBean=all
#log4j.logger.sailpoint.web.lcm.SubmitRequestBean=all
#log4j.logger.sailpoint.web.lcm.BaseRequestBean=all 
#log4j.logger.sailpoint.web.util.TimingFilter=all
 
# LCM Configuration
#log4j.logger.sailpoint.rest.IdentityListResource=debug
#log4j.logger.sailpoint.service.IdentityListService=debug
#log4j.logger.sailpoint.web.lcm.LCMConfigService=debug
#log4j.logger.sailpoint.service.BaseResourceColumnSelector=debug

# Passwords
#log4j.logger.sailpoint.rest.ui.UserResetResource=all
#log4j.logger.sailpoint.service.IdentityResetService=all
#log4j.logger.sailpoint.service.PasswordReseter=all
#log4j.logger.sailpoint.server.Authenticator=all
#log4j.logger.sailpoint.web.AuthenticationAnswersBean=all
#log4j.logger.sailpoint.web.LoginBean=all
#log4j.logger.sailpoint.web.PageAuthenticationFilter=all
#log4j.logger.sailpoint.web.util.TimingFilter=all
#log4j.logger.sailpoint.api.Challenger=all
 
# Password Interceptor:
#log4j.logger.sailpoint.rest.PasswordInterceptResource=all 
#log4j.logger.sailpoint.api.IdentityLifecycler=all
 
# Perform Identity Request Maintenance
#log4j.logger.sailpoint.task.IdentityRequestMaintenance=ALL
 
# Perform Maintenance Task
#log4j.logger.sailpoint.task.Housekeeper
 
# Provisioning API
#log4j.logger.sailpoint.api.Provisioner=all
 
# Provisioning Integration:
# This is the main entry point for all provisioning requests. 
#log4j.logger.sailpoint.api.Provisioner=trace

# Called by Provisioner to expand roles and figure out what integrations to use. 
# This is one of the more useful classes to trace to determine what a role expanded into, but it is quite verbose. 
# (lots of XML representations of plans at various phases) 
#log4j.logger.sailpoint.provisioning.PlanCompiler=trace

# Called by Provisioner after plan compilation to call the executors.
#log4j.logger.sailpoint.provisioning.PlanEvaluator=trace

# Handles the parts of the plan targeted at the IIQ identity cubes.
#log4j.logger.sailpoint.provisioning.IIQEvaluator=trace

# The implementation of the integration executor interface eventually called by PlanEvaluator. 
# Tracing on whole package here instead of having to know the specific class name used for a particular integration. 
#log4j.logger.sailpoint.integration=trace
 
# Provisioning Object Model Logging 
#log4j.logger.sailpoint.object.ProvisioningPlan=debug
#log4j.logger.sailpoint.object.ProvisioningProject=debug
#log4j.logger.sailpoint.object.ProvisioningResult=debug
#log4j.logger.sailpoint.object.Form=debug 

# Remediation Manager (for Cert and Policy Violations):
#log4j.logger.sailpoint.api.certification.RemediationManager
 
# Remediation Task:
#log4j.logger.sailpoint.api.certification.RemediationManager=trace
#log4j.logger.sailpoint.task.Housekeeper=trace
 
# Reporting:
#log4j.logger.sailpoint.reporting=trace 
#log4j.logger.sailpoint.reporting.datasource=trace 
#log4j.logger.sailpoint.reporting.JasperExecutor=all
#log4j.logger.sailpoint.reporting.SailPointAsynchronousFiller=all
#log4j.logger.sailpoint.reporting.JasperExport=all
 
# Request Processing such as workflow, email and SPML requests:
#log4j.logger.sailpoint.request=trace

# Risk Score
#log4j.logger. sailpoint.score.CertificationerScorer
 
# Role Mining:
#log4j.logger.sailpoint.task.DirectRoleMiner=trace 
#log4j.logger.sailpoint.task.DirectMiningTask=trace
#log4j.logger.sailpoint.task.EntitlementRoleGenerator=trace 
#log4j.logger.sailpoint.web.mining.ITRoleMiningPopulationBean=all
#log4j.logger.sailpoint.object.ITRoleMiningTaskResult$EntitlementStatistics=all

# SAML:
#log4j.logger.sailpoint.web.sso=all 

# Scheduler (Quartz):
#log4j.logger.sailpoint.scheduler=trace
 
# Scopes:
#log4j.logger.sailpoint.object.Scope=all 
#log4j.logger.sailpoint.object.Filter=all 
#log4j.logger.sailpoint.object.QueryOptions=all 
#log4j.logger.sailpoint.web.scope=all
 
# Server Environment and Heartbeat related information’s
#log4j.logger.sailpoint.server.BSFRuleRunner=trace
#log4j.logger.sailpoint.server.CacheService=info
#log4j.logger.sailpoint.server.Environment=trace
#log4j.logger.sailpoint.server.HeartbeatService=trace
 
# SOD Policy
#log4j.logger.sailpoint.workflow.IdentityLibrary=all
#log4j.logger.sailpoint.api.Interrogator=all
#log4j.logger.sailpoint.policy.EntitlementSODPolicyExecutor=all
#log4j.logger.sailpoint.policy.GenericPolicyExecutor=all
#log4j.logger.sailpoint.api.MatchMaker=all
 
# SQL and prepared statement parameter values.
#log4j.logger.org.hibernate.SQL=trace 
#log4j.logger.org.hibernate.type=trace  

# SSO Package
#log4j.logger.sailpoint.web.LoginBean=all
#log4j.logger.sailpoint.web.PageAuthenticationFilter=all
#log4j.logger.sailpoint.web.sso.DefaultSSOAuthenticator=all
#log4j.logger.sailpoint.web.sso.SSOAuthenticationRunner=all
#log4j.logger.sailpoint.web.util.TimingFilter=all
 
# UI related issues:
#log4j.logger.sailpoint.web=trace
 
# Unstructured Target Collector
# AD:
#log4j.logger.sailpoint.task.UnstructuredTargetScan=all
#log4j.logger.sailpoint.api.TargetAggregator=all
#log4j.logger.sailpoint.unstructured=all

# Workflow:
#log4j.logger.sailpoint.WorkflowTrace=trace
 
# Web Services:
#log4j.logger.sailpoint.rest=trace 
#log4j.logger.sailpoint.service.IIQRestService=info

# Workflow
#log4j.logger.sailpoint.WorkflowTrace=TRACE 
#log4j.logger.sailpoint.Workflower=TRACE

# Workflow API/Handlers/Libraries 
#log4j.logger.sailpoint.workflow.WorkflowHandler=debug 
#log4j.logger.sailpoint.workflow.StandardWorkflowHandler=debug
#log4j.logger.sailpoint.workflow.IdentityRequestWorkflowHandler=debug  
#log4j.logger.sailpoint.workflow.WorkflowLibrary=debug 
#log4j.logger.sailpoint.workflow.IdentityRequestLibrary=debug 
#log4j.logger.sailpoint.workflow.LCMIdentityLibrary=debug  
#log4j.logger.sailpoint.workflow.GroupLibrary=debug 
#log4j.logger.sailpoint.workflow.ApprovalLibrary=debug



### IIQ Connector-Specific log4j settings ###

# Active Directory Direct
#log4j.logger.sailpoint.connector.ADLDAPConnector=trace

# AIX - Direct
#log4j.logger.openconnector.connector.unix.UnixConnector=trace #log4j.logger.openconnector.connector.unix.AIXConnector=trace

# DelimitedFile
#log4j.logger.sailpoint.connector.DelimitedFileConnector=trace

# JDBC
#log4j.logger.sailpoint.connector.JDBCConnector=trace

# LDAP
#log4j.logger.sailpoint.connector.LDAPConnector=trace

# IBM Lotus Domino - Direct
#log4j.logger.sailpoint.connector.LotusDomino=trace

# GoogleApps - Direct
#log4j.logger.openconnector.connector.GoogleApps=trace

# Linux - Direct
#log4j.logger.openconnector.connector.unix.UnixConnector=trace #log4j.logger.openconnector.connector.unix.LinuxConnector=trace

# Microsoft SQL Server - Direct
#log4j.logger.sailpoint.connector.MSSQLServerConnector=trace #log4j.logger.sailpoint.connector.JDBCConnector=trace

# Oracle Database - Direct
#log4j.logger.sailpoint.connector.OracleDBConnector=trace #log4j.logger.sailpoint.connector.JDBCConnector=trace

# PeopleSoft - Direct
#log4j.logger.openconnector.connector.PeopleSoftConnector=trace

# RemedyForce
#log4j.logger.sailpoint.connector.ForceConnector=trace

# Siebel
#log4j.logger.openconnector.connector.SiebelConnector=trace

# Solaris - Direct
#log4j.logger.openconnector.connector.unix.UnixConnector=trace #log4j.logger.openconnector.connector.unix.SolarisConnector=trace

# Sybase - Direct
#log4j.logger.sailpoint.connector.SybaseDirectConnector=trace #log4j.logger.sailpoint.connector.JDBCConnector=trace

# XML
#log4j.logger.openconnector.connector.XMLConnector=trace

# Box
#log4j.logger.openconnector.connector.BoxNetConnector=trace

# CyberArk
#log4j.logger.sailpoint.connector.CyberArk=trace

# Microsoft Office365
#log4j.logger.sailpoint.connector.Office365Connector=trace

# Microsoft Project Server
#log4j.logger.sailpoint.connector.ProjectServer=trace

# Oracle HRMS
#log4j.logger.sailpoint.connector.OracleAppsHRMSConnector=trace #log4j.logger.sailpoint.connector.JDBCConnector=trace

# Oracle E-Business
#log4j.logger.sailpoint.connector.OracleAppsConnector=trace #log4j.logger.sailpoint.connector.JDBCConnector=trace

# PeopleSoftHRMS - Direct
#log4j.logger.openconnector.connector.PeopleSoftHRMSConnector=trace

# Rally
#log4j.logger.openconnector.connector.RallyConnector=trace

# RSA Authentication Manager - Direct
#log4j.logger.openconnector.connector.RSAConnector=trace

# SAP - Direct
#log4j.logger.sailpoint.connector.SAPConnector=trace #log4j.logger.sailpoint.connector.SAPInternalConnector=trace

# SCIM
#log4j.logger.openconnector.connector.SCIMConnector=trace

# Tenrox
#log4j.logger.openconnector.connector.TenroxConnector=trace

# Webex
#log4j.logger.openconnector.connector.Webex=trace

# Yammer
#log4j.logger.openconnector.connector.YammerConnector=trace

# Cerner
#log4j.logger.openconnector.connector.CernerConnector=trace

# EPIC
#log4j.logger.openconnector.connector.EPICConnector=trace #log4j.logger.httpclient.wire=trace
#log4j.logger.org.apache.commons.httpclient=trace

# GE Centricity
#log4j.logger.openconnector.connector.GECentricity=trace

# IBM i
#log4j.logger.openconnector.connector.IBMiConnector=trace

# Workday
#log4j.logger.openconnector.connector.WorkDay=trace
